/**
 * Generated By NPCScript :: A scripting engine created for openrsc by Zilent
 */
package org.openrsc.server.npchandler.Merlins_Crystal;

import org.openrsc.server.Config;
import org.openrsc.server.event.DelayedQuestChat;
import org.openrsc.server.event.ShortEvent;
import org.openrsc.server.event.SingleEvent;
import org.openrsc.server.model.*;
import org.openrsc.server.npchandler.NpcHandler;


public class Arhein implements NpcHandler {

    public void handleNpc(final Npc npc, final Player owner) throws Exception {
        npc.blockedBy(owner);
        owner.setBusy(true);
        Quest q = owner.getQuest(Config.Quests.MERLINS_CRYSTAL);
        if (q != null) {
            if (q.finished()) {
                noQuestStarted(npc, owner);
            } else {
                switch (q.getStage()) {
                    case 3:
                        questStage3(npc, owner);
                        break;
                    default:
                        noQuestStarted(npc, owner);
                }
            }
        } else {
            noQuestStarted(npc, owner);
        }
    }


    private void noQuestStarted(final Npc npc, final Player owner) {
        final Shop shop = World.getShop(npc.getLocation());
        if (shop == null) {
            return;
        }
        final String[] messages1 = {"Hello would you like to trade"};
        World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages1, true) {
            public void finished() {
                World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
                    public void action() {
                        final String[] options1 = {"Yes ok", "No thank you", "Is that your ship?"};
                        owner.setBusy(false);
                        owner.sendMenu(options1);
                        owner.setMenuHandler(new MenuHandler(options1) {
                            public void handleReply(final int option, final String reply) {
                                owner.setBusy(true);
                                for (Player informee : owner.getViewArea().getPlayersInView()) {
                                    informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
                                }
                                switch (option) {
                                    case 0:
                                        World.getDelayedEventHandler().add(new ShortEvent(owner) {
                                            public void action() {
                                                owner.setBusy(false);
                                                owner.setAccessingShop(shop);
                                                owner.showShop(shop);
                                                npc.unblock();
                                            }
                                        });
                                        break;
                                    case 1:
                                        owner.setBusy(false);
                                        npc.unblock();
                                        break;

                                    case 2:
                                        final String[] messages2 = {"Yes I use it to make deliver my goods up and down the coast", "These crates here are all ready for my next trip"};
                                        World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages2) {
                                            public void finished() {
                                                World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
                                                    public void action() {
                                                        final String[] options2 = {"Where do you deliver?", "Are you rich then?"};
                                                        owner.setBusy(false);
                                                        owner.sendMenu(options2);
                                                        owner.setMenuHandler(new MenuHandler(options2) {
                                                            public void handleReply(final int option, final String reply) {
                                                                owner.setBusy(true);
                                                                for (Player informee : owner.getViewArea().getPlayersInView()) {
                                                                    informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
                                                                }
                                                                switch (option) {
                                                                    case 0:
                                                                        final String[] messages3 = {"Oh various places up and down the coast", "Mostly Karamja and Port Sarim"};
                                                                        World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages3) {
                                                                            public void finished() {
                                                                                World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
                                                                                    public void action() {
                                                                                        final String[] options3 = {"I don't suppose I could get a lift anywhere?", "Well good luck with your business"};
                                                                                        owner.setBusy(false);
                                                                                        owner.sendMenu(options3);
                                                                                        owner.setMenuHandler(new MenuHandler(options3) {
                                                                                            public void handleReply(final int option, final String reply) {
                                                                                                owner.setBusy(true);
                                                                                                for (Player informee : owner.getViewArea().getPlayersInView()) {
                                                                                                    informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
                                                                                                }
                                                                                                switch (option) {
                                                                                                    case 0:
                                                                                                        final String[] messages3 = {"I'm not quite ready to sail yet"};
                                                                                                        World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages3) {
                                                                                                            public void finished() {
                                                                                                                owner.setBusy(false);
                                                                                                                npc.unblock();
                                                                                                            }
                                                                                                        });
                                                                                                        break;
                                                                                                    case 1:
                                                                                                        owner.setBusy(false);
                                                                                                        npc.unblock();
                                                                                                        break;
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                });

                                                                            }
                                                                        });
                                                                        break;
                                                                    case 1:
                                                                        final String[] messages4 = {"Business is going reasonable well", "I wouldn't say I was the richest of merchants ever", "But I'm doing reasonably well"};
                                                                        World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, messages4) {
                                                                            public void finished() {
                                                                                owner.setBusy(false);
                                                                                npc.unblock();
                                                                            }
                                                                        });
                                                                        break;
                                                                }
                                                            }
                                                        });
                                                    }
                                                });
                                            }
                                        });
                                }
                            }
                        });
                    }
                });
            }
        });

    }


    private void questStage3(final Npc npc, final Player owner) {
        World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[]{"Hi, Can I help you?"}, true) {
            public void finished() {
                World.getDelayedEventHandler().add(new SingleEvent(owner, 1500) {
                    public void action() {
                        final String[] options107 = {"Hi could you smuggle me into Keep Le Faye? ", "No thanks, goodbye"};
                        owner.setBusy(false);
                        owner.sendMenu(options107);
                        owner.setMenuHandler(new MenuHandler(options107) {
                            public void handleReply(final int option, final String reply) {
                                owner.setBusy(true);
                                for (Player informee : owner.getViewArea().getPlayersInView()) {
                                    informee.informOfChatMessage(new ChatMessage(owner, reply, npc));
                                }
                                switch (option) {
                                    case 0:
                                        quest(npc, owner);
                                        break;
                                    case 1:
                                        goodBye(npc, owner);
                                        break;
                                }
                            }
                        });
                    }
                });
            }
        });
    }


    private void quest(final Npc npc, final Player owner) {
        World.getDelayedEventHandler().add(new DelayedQuestChat(npc, owner, new String[]{"sorry no can do", "They would have my head if I did that", "I need to get these crates on to the ship", "so please stop talking to me", "I'm very busy"}) {
            public void finished() {
                owner.setBusy(false);
                npc.unblock();
            }
        });
    }


    private void goodBye(final Npc npc, final Player owner) {
        World.getDelayedEventHandler().add(new DelayedQuestChat(owner, npc, new String[]{"Farewell"}) {
            public void finished() {
                owner.setBusy(false);
                npc.unblock();
            }
        });
    }

}